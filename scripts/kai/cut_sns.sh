#!/bin/bash
#
# This script  is part of MOSSCO.  It tailors big netcdf files to relevant eco-variables
#
# @copyright (C) 2015 Helmholtz-Zentrum Geesthacht
# @author Kai W. Wirtz
# @author Carsten Lemmen
#
# MOSSCO is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License v3+.  MOSSCO is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY.  Consult the file
# LICENSE.GPL or www.gnu.org/licenses/gpl-3.0.txt for the full license terms.
#

# ---------------------
# User configuration
# Declare a list of variables to extract
declare -a vn=("Dissolved_Inorganic_Nitrogen_DIN_nutN_in_water" "Dissolved_Inorganic_Phosphorus_DIP_nutP_in_water" "Chl_chl_in_water" "detritus-P_in_soil" "mole_concentration_of_phosphate_in_soil" "Phytplankton_Phosphorus_phyP_in_water" "Phytplankton_Carbon_phyC_in_water")
#"Phytplankton_Carbon_phyC_in_water"   "P\:C_ratio__QP_in_water"  "Detritus_Carbon_detC_in_water" "mole_concentration_of_phosphate_in_soil"  "fraction_of_Rubisco_Rub_in_water" "N\:C_ratio__QN_in_water" "P\:C_ratio__QP_in_water" "Rubisco_fract._allocation__fracR_in_water" "chlorophyll_to_carbon_ratio_in_water" "water_depth_at_soil_surface" "denitrification_rate_in_soil" "mole_concentration_of_nitrate_in_soil    "Chl_chl_in_water"    "mole_concentration_of_phosphate_in_soil" "Phytplankton_Nitrogen_phyN_in_water" "mole_concentration_of_phosphate_in_soil" "detritus-P_in_soil"
#declare -a vn=("denitrification_rate_in_soil""Phytplankton_Phosphorus_phyP_in_water" "fast_detritus_C_in_soil"    "dissolved_oxygen_in_soil" "nutrients_in_water" "phytoplankton_in_water" "detritus_in_water" )
#declare -a vn=("mole_concentration_of_nitrate_in_soil" "phytoplankton_in_water" "nutrients_in_water"  "dissolved_oxygen_in_soil")
#"chl" "Rub" "Chl_chl_in_water" "Detritus_Nitrogen_detN_in_water" 
# 
model=''   # Fabm model name, e.g. hzg_maecs
n1=0
dn=1
if [ $# -lt 2 ]; then
  outdir=~/ocean/data/cut    # Where to put the extracted files
else
  outdir=$2
fi

if [ $# -gt 2 ]; then
  n1=$3
fi
if [ $# -gt 3 ]; then
  dn=$4
fi

#prefix=netcdf_getm_fabm_pelagic.  # Prefix of files to process
prefix=mossco_gffrpr.  # Prefix of files to process
dt=1          # slicing of time dimension
dlat=1        # slicing of lat dimension
dlon=1        # slicing of lon dimension
dz=13          # slicing of vertical dimension
# ---------------------
# Needs number of processors  as argument

if [[ "x$1" == "x" ]] ; then
  echo "This script needs the number of processors as input argument."
  echo "Provide 0 if you do not want to process multiprocessor output."
  exit 1
else
  nproc=$(expr $1 - 1)
fi

mkdir -p $outdir

# build comma separated string
ts=$model${vn[0]}
for (( i=1; i<${#vn[@]}; i++ )) do
  ts=$ts','$model${vn[$i]}
done # i
echo $ts

tg='time,doy,getmGrid2D_getm_lat,getmGrid2D_getm_lon,getmGrid3D_getm_lat,getmGrid3D_getm_lon,getmGrid2D_getm_Y,getmGrid2D_getm_X,getmGrid3D_getm_Y,getmGrid3D_getm_X'

if [[ $nproc == -1 ]]; then
  fname=${prefix}'.nc'
  if ! test -f $fname ; then
    echo "File $fname does not exist"
    exit 1
  fi
  outname=$outdir'/cut.nc'
  echo $fname '->' $outname
  # invokes nco tool and writes output to folder "cut/"
  #   skipping every 2nd lateral grid point and output-time step
  ncks -O -v $tg,$ts\
    -d getmGrid2D_getm_1,1,,${dlon} \
    -d getmGrid2D_getm_2,1,,${dlat} \
    -d getmGrid3D_getm_1,1,,${dlon} \
    -d getmGrid3D_getm_2,1,,${dlat} \
    -d time,820,836,${dt} $fname $outname
#2367000,2412000
  # compares file sizes
  ls -l  $fname $outname
else
  # loop over all nc files generated by mossco for multiprocessor output
  for p in $(seq -f "%02g" $n1 $dn $nproc); do
    fname=${prefix}$p'.nc'
      outname=$outdir'/cut_'$p'.nc'
      outname2=$outdir'/cut2_'$p'.nc'

    if ! [[ -f $fname ]] ; then
      echo "File $fname does not exist"
      exit 1
    fi
	echo $fname '->' $outname
	# invokes nco tool and writes output to folder "cut/"
#        echo $tg,$ts
	ncks -O -v $tg,$ts\
		-d getmGrid2D_getm_1,1,,${dlon} \
		-d getmGrid2D_getm_2,1,,${dlat} \
		-d getmGrid3D_getm_1,1,,${dlon} \
		-d getmGrid3D_getm_2,1,,${dlat} \
		-d getmGrid3D_getm_3,1,,${dz} \
		-d ungridded00020,1,,18 \
		-d time,20,,${dt} $fname $outname

#     ncap -O -s "Dissolved_Inorganic_Phosphorus_DIP_nutP_in_water=Dissolved_Inorganic_Phosphorus_DIP_nutP_in_water-0.3*(1-exp(-Dissolved_Inorganic_Phosphorus_DIP_nutP_in_water*3))- 1.* Phytplankton_Phosphorus_phyP_in_water"  $outname2 $outname
   ncap -O -s "PC=Phytplankton_Phosphorus_phyP_in_water/(Phytplankton_Carbon_phyC_in_water+0.001)"  $outname $outname2
   ncap -O -s "NC=Phytplankton_Nitrogen_phyN_in_water/(Phytplankton_Carbon_phyC_in_water+0.001)"  $outname2 $outname
#    ncap -O -s "ODT=dissolved_reduced_substances_in_soil-dissolved_oxygen_in_soil"  $outname2 $outname 
#	ls -l  $fname $outname
   done
fi
