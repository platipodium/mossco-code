#!/bin/bash
#
# This script is part of MOSSCO.  It tailors big netcdf files to relevant eco-variables
# @copyright (C) 2015 Helmholtz-Zentrum Geesthacht
# @author Kai W. Wirtz
# @author Carsten Lemmen
#
# MOSSCO is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License v3+.  MOSSCO is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY.  Consult the file
# LICENSE.GPL or www.gnu.org/licenses/gpl-3.0.txt for the full license terms.
# ---------------------
homed=$PWD
Nstart=306 # initial time-step; skips trailer 
#prefix=netcdf_getm_fabm_pelagic.  # Prefix of files to process
prefix=mossco_gfbfrr.  # Prefix of files to process
dt=2      # slicing of time dimension; 20 gives monthly means at 36h-output

if [ $# -lt 1 ]; then
  ncpu=178     # sns configuration (#cpus)
else
  ncpu=$1
fi
# transect coordinates

case $ncpu in
 117)
   p[0]=$(seq -f "%03g" 106 1 116) #92=lat=55.25; 105
   dy[0]=4
   p[1]=$(seq -f "%03g" 79 1 91) #71=lat=54.6;
   dy[1]=3
   p[2]="008 019 030 045 059 072 086 100 112" #76=lon=6.4; omitt 112?
   dx[2]=1
   p[3]="032 047 061 074 088 102 114" #96=lon=7.5  ,009 020  
   dx[3]=1
   fname=${prefix}'029.nc'
   ;;
 178)
   p[0]=$(seq -f "%03g" 164 1 177) #92=lat=55.25; 105
   dy[0]=1
   p[1]=$(seq -f "%03g" 115 1 129) #71=lat=54.6;
   dy[1]=4
   p[2]="024 038 056 073 090 106 123 140 156 171" #76=lon=6.4; omitt 112?
   dx[2]=6
   p[3]="041 059 076 093 109 126 143 159 174" #96=lon=7.5  ,009 020  
   dx[3]=2
   fname=${prefix}'029.nc'
   ;;
 61)
   p[0]=$(seq -f "%02g" 22 1 31)
   p[1]="03 10 $(seq -f "%02g" 19 10 59)" #61
   fname=${prefix}'29.nc'
   ;;
 *)
   echo "unkown configuration (#cpus)"
   exit 1
esac
dx[0]=1,,1
dx[1]=1,,1
dy[2]=1,,1
dy[3]=1,,1
declare -a gd=(1 1 2 2)

# ---------------------
# User configuration
# Declare a list of variables to extract
declare -a vn=("Dissolved_Inorganic_Phosphorus_DIP_nutP_in_water" "Chl_chl_in_water" "Dissolved_Inorganic_Nitrogen_DIN_nutN_in_water" "Detritus_Carbon_detC_in_water" "Zooplankton_Carbon_zooC_in_water")
# "Phytplankton_Phosphorus_phyP_in_water" "Phytplankton_Nitrogen_phyN_in_water"   "mole_concentration_of_nitrate_in_soil" "Detritus_Carbon_detC_in_water" "Detritus_Nitrogen_detN_in_water" "Phytplankton_Carbon_phyC_in_water"  
#tb='denitrification_rate_in_soil,layer_height_in_soil,fast_detritus_C_in_soil,detritus-P_in_soil,mole_concentration_of_nitrate_in_soil,mole_concentration_of_phosphate_in_soil,dissolved_oxygen_in_soil,dissolved_oxygen_upward_flux_at_soil_surface,dissolved_reduced_substances_upward_flux_at_soil_surface'

# ---------------------
# Needs number of processors  as argument

if [ $# -lt 2 ]; then
  outdir=cut    # Where to put the extracted files
else
  outdir=$2
fi

N=$(ncdump -h $fname |grep '= UNLIMITED' |cut -f2 -d'(' |cut -f1 -d' ')
N=$[$N -1]
N=364
#echo $N

mkdir -p $outdir

# build comma separated string
ts=${vn[0]}
for (( i=1; i<${#vn[@]}; i++ )) do
  ts=$ts','${vn[$i]}
done # i
#echo $ts

tg='time,doy,getmGrid2D_getm_lat,getmGrid2D_getm_lon,getmGrid3D_getm_lat,getmGrid3D_getm_lon,getmGrid2D_getm_Y,getmGrid2D_getm_X,getmGrid3D_getm_Y,getmGrid3D_getm_X'

# loop over all nc files generated by mossco for multiprocessor output
echo  
for nt in $(seq 0 3); do
# echo ${p[nt]}
 for p in ${p[nt]}; do
  echo $p

  fname=${prefix}$p'.nc'
  outname=$outdir'/cutT'$nt'_'$p'.nc'
  outnameD=$outdir'/cutD'$nt'_'$p'.nc'

  if ! [[ -f $fname ]] ; then
      echo "File $fname does not exist"
      exit 1
  fi
  echo $fname '->' $outname
	# invokes nco tool and writes output to folder "cut/"
#        echo $tg,$ts
#	-d getmGrid3D_getm_3,1,,${dz} \
#        -d ungridded00015,1,,13 \

  ncks -F -O -v $tg,$ts \
	-d getmGrid2D_getm_1,${dx[nt]} \
	-d getmGrid2D_getm_2,${dy[nt]} \
	-d getmGrid3D_getm_1,${dx[nt]} \
	-d getmGrid3D_getm_2,${dy[nt]} \
	-d time,$Nstart,$N,$dt $fname $outname

  ncks -F -O -v $tg,water_depth_at_soil_surface \
	-d getmGrid2D_getm_1,${dx[nt]} \
	-d getmGrid2D_getm_2,${dy[nt]} \
	-d time,$Nstart,$N,$dt $fname $outnameD

 # Make getmGrid3D_getm_1 record dimension
   ncpdq -O -a getmGrid3D_getm_${gd[nt]},time $outname $outname
   ncpdq -O -a getmGrid2D_getm_${gd[nt]},time $outnameD $outnameD
   ls -l  $fname $outname
 done
 cd $outdir
 out='cutT'$nt'.nc'
 echo 'cutT'$nt'_*.nc'
 ncrcat -O cutT$nt\_*.nc $out
 outD='cutD'$nt'.nc'
 echo 'cutD'$nt'_*.nc'
 ncrcat -O cutD$nt\_*.nc $outD

 ncpdq -O -a time,getmGrid3D_getm_${gd[nt]} $out $out
 ncpdq -O -a time,getmGrid2D_getm_${gd[nt]} $outD $outD
# ncks -A $outD $out
 # clean-up
 rm cutT$nt\_*.nc
 rm cutD$nt\_*.nc
 cd $homed
done


