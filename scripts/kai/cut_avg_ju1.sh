#!/bin/bash
#
# This script is part of MOSSCO.  It tailors big netcdf files to relevant eco-variables
# @copyright (C) 2015 Helmholtz-Zentrum Geesthacht
# @author Kai W. Wirtz
# @author Carsten Lemmen
#
# MOSSCO is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License v3+.  MOSSCO is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY.  Consult the file
# LICENSE.GPL or www.gnu.org/licenses/gpl-3.0.txt for the full license terms.

# ---------------------
# User configuration
# Declare a list of variables to extract
declare -a vn=( "Detritus_Carbon_detC_in_water" "Phytplankton_Carbon_phyC_in_water")
#  "mole_concentration_of_nitrate_in_soil" "Detritus_Phosphorus_detP_in_water""dissolved_oxygen_in_soil" "Phytplankton_Phosphorus_phyP_in_water" "Phytplankton_Nitrogen_phyN_in_water" "fraction_of_Rubisco_Rub_in_water""detritus-P_in_soil" "temperature_in_water""Phytplankton_Phosphorus_phyP_in_water" "Phytplankton_Nitrogen_phyN_in_water"    "N\:C_ratio__QN_in_water" "P\:C_ratio__QP_in_water" "Rubisco_fract._allocation__fracR_in_water" "chlorophyll_to_carbon_ratio_in_water" "water_depth_at_soil_surface" "denitrification_rate_in_soil" "mole_concentration_of_nitrate_in_soil  "mole_concentration_of_phosphate_in_soil"
# 
tb='denitrification_rate_in_soil,layer_height_in_soil,fast_detritus_C_in_soil,detritus-P_in_soil,mole_concentration_of_nitrate_in_soil,mole_concentration_of_phosphate_in_soil,dissolved_oxygen_in_soil,dissolved_oxygen_upward_flux_at_soil_surface,dissolved_reduced_substances_upward_flux_at_soil_surface'
model=''   # FABM model name, e.g. hzg_maecs
n1=0       # starting domain-no of loop
dn=1       # increment in domain-no of loop
Nstart=1  # initial time-step; skips trailer 
soil=0

#prefix=netcdf_getm_fabm_pelagic.  # Prefix of files to process
if [ -z ${prefix+x} ]; then prefix=mossco_gfbfrr. ; fi  # Prefix of files to process
dt=1         # slicing of time dimension; 20 gives monthly means at 36h-output
dt1=1   # creates high res output that is averaged 
##dt1=$dt    # only cuts every dt time slice
dlat=1        # slicing of lat dimension
dlon=1        # slicing of lon dimension
dz=1         # slicing of vertical dimension; 18 retrieves upper and lower layer for N=20
# ---------------------
dt2=$[$dt-$dt1]

# Needs number of processors  as argument
if [[ "x$1" == "x" ]] ; then
  echo "This script needs the number of processors as input argument."
  echo "Provide 0 if you do not want to process multiprocessor output."
  exit 1
else
  nproc=$(expr $1 - 1)
  if [[ $nproc -lt 100 ]]; then
    form="%02g"
    fname=${prefix}'29.nc'
  else
    form="%03g"
    fname=${prefix}'029.nc'
  fi
fi

if [ $# -lt 2 ]; then
  outdir=~/ocean/data/cut    # Where to put the extracted files
else
  outdir=$2
fi
if [ $# -gt 2 ]; then  #starting domain-no of loop
  n1=$3
fi
if [ $# -gt 3 ]; then  #increment in domain-no of loop
  dn=$4
fi
if [ $# -gt 4 ]; then  #last time-step to be processed
  N=$5
else
  N=$(ncdump -h $fname |grep '= UNLIMITED' |cut -f2 -d'(' |cut -f1 -d' ')
  N=$[$N -1]
fi

mkdir -p $outdir

# build comma separated string
ts=$model${vn[0]}
for (( i=1; i<${#vn[@]}; i++ )) do
  ts=$ts','$model${vn[$i]}
done # i
#echo $ts

tg='time,doy,getmGrid2D_getm_lat,getmGrid2D_getm_lon,getmGrid3D_getm_lat,getmGrid3D_getm_lon,getmGrid2D_getm_Y,getmGrid2D_getm_X,getmGrid3D_getm_Y,getmGrid3D_getm_X,layer_height_in_water'


# loop over all nc files generated by mossco for multiprocessor output
for p in $(seq -f $form $n1 $dn $nproc); do
  fname=${prefix}$p'.nc'
  outname=$outdir'/cut1_'$p'.nc'
  outname2=$outdir'/cut_'$p'.nc'
  outnamez=$outdir'/cutz_'$p'.nc'

  if ! [[ -f $fname ]] ; then
      echo "File $fname does not exist"
      exit 1
  fi
  echo $fname '->' $outname
	# invokes nco tool and writes output to folder "cut/"
#        echo $tg,$ts

  if [[ $soil == 1 ]]; then
     ncks -O -v $tg,$tb -d time,$Nstart,$N $fname $outname2 
     ncap2 -O -s 'N2r=denitrification_rate_in_soil*layer_height_in_soil'  $outname2 $outname
     ncap2 -O -s 'N2flux=N2r.total($ungridded00015)'  $outname $outnamez
  fi
  ncks -F -O -v $tg,$ts \
	-d getmGrid2D_getm_1,1,,${dlon} \
	-d getmGrid2D_getm_2,1,,${dlat} \
	-d getmGrid3D_getm_1,1,,${dlon} \
	-d getmGrid3D_getm_2,1,,${dlat} \
	-d getmGrid3D_getm_3,1,,${dz} \
        -d ungridded00015,1,,13 \
	-d time,$Nstart,$N,$dt1 $fname $outname2
#    ncap -O -s "O2flux=dissolved_oxygen_upward_flux_at_soil_surface"  $outname2 $outname
#    ncap -O -s "NC=Phytplankton_Nitrogen_phyN_in_water/(Phytplankton_Carbon_phyC_in_water+0.001)"  $outname $outname2
   ncap2 -O -s 'N2r=denitrification_rate_in_soil*layer_height_in_soil'  $outname2 $outname
   ncap2 -O -s 'N2flux=N2r.total($ungridded00015)'  $outname $outname2
   ncks -C -O -x -v layer_height_in_soil $outname2 $outname
   ncks -C -O -x -v N2r $outname $outname2
#    ncap -O -s "N2flux=dissolved_oxygen_upward_flux_at_soil_surface"  $outname2 $outname
   ncap -O -s "PC=Phytplankton_Phosphorus_phyP_in_water/(Phytplankton_Carbon_phyC_in_water+0.001)"  $outname2 $outname
   ncap -O -s "NC=Phytplankton_Nitrogen_phyN_in_water/(Phytplankton_Carbon_phyC_in_water+0.001)"  $outname $outname2
    # calculate time slice partitioning 
  nslice=$[($N- $Nstart)/$dt - 0]
  echo 'processing time periods ' $Nstart $N $nslice
  cd $outdir

##      dt2=0
  if [[ $dt2 > 0 ]]; then
    for na in $(seq -f "%03g" 1 $nslice); do #Number of years in the file
      nn=$[10#$na * $dt]         #last time step 
#      nn=$[$nn + $nn/72]
      outname1=$na'-'$p'tmp.nc'
      outname1m=$na'-'$p'tmp_max.nc'
      if [[ $soil == 1 ]]; then
        outname1z=$na'-'$p'tmp_z.nc'
        ncra -F -O -d time,$[$nn-$dt2],$nn  '../'$outnamez $outname1z
      fi
##      echo $p $[$nn-$dt+1] $nn $outname1
    # calculate mean and macimum in time slice  -v $tg,$ts

        ncra -F -O -d time,$[$nn-$dt2],$nn  '../'$outname2 $outname1
        ncra -F -O -y max -d time,$[$nn-$dt2],$nn '../'$outname2 $outname1m
     done

     fn='*-'$p'tmp.nc'
     fn2='cut_'$p'.nc'
#  ncrcat -O $fn '../'$outname
     ncrcat -O $fn $fn2
     fn='*-'$p'tmp_max.nc'
     fn2='cutm_'$p'.nc'
     ncrcat -O $fn $fn2
     if [[ $soil == 1 ]]; then
       fn='*-'$p'tmp_z.nc'
       fn2='cutz_'$p'.nc'
       ncrcat -O $fn $fn2
     fi

   fi
   cd ..
   ls -l  $fname $outdir'/cut_'$p'.nc'
 done
# clean-up
if [[ $dn == 1 ]]; then 
 fname=$outdir'/*tmp*.nc'
 rm $fname
 fname=$outdir'/cut1_*.nc'
 rm $fname
 fname=$outdir'/cut2_*.nc'
 rm $fname
 ls -l $outdir
fi
