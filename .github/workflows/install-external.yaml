# This workflow definition is part of MOSSCO
#
# @copyright (C) 2019 Helmholtz-Zentrum Geesthacht
# @author Carsten Lemmen <carsten.lemmen@hzg.de>
#
# MOSSCO is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License v3+.  MOSSCO is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY.  Consult the file
# LICENSE.GPL or www.gnu.org/licenses/gpl-3.0.txt for the full license terms.
#

name: install-externals

# Required The name of the GitHub event that triggers the workflow. You can provide a single event string, array of events, array of event types, or an event configuration map that schedules a workflow or restricts the execution of a workflow to specific files, tags, or branch changes. For a list of available events, see "Events that trigger workflows."
on: [push]
#  - push:
#    branches:
#      - master
#  - schedule:
#    - cron:  '5 23 * * *' # minute hour day month year, so each day at 23:05

env:
  ESMFMKFILE: ${HOME}/opt/Linux/gfortran.mpiuni/esmf.mk

jobs:
  download-esmf-job:
    #if: "[[ ! -f ${ESMFMKFILE} ]]"
    #shell: bash
    name: Download and build ESMF
    runs-on: ubuntu-latest
    env:
      ESMF_DIR: ${HOME}/opt/devel/esmf
      ESMF_INSTALL_PREFIX: ${HOME}/opt
    steps:
      - name: Clean ESMF directory
        run:
          mkdir -p ${ESMF_DIR}/.. &&
          rm -rf ${ESMF_DIR}
      - name: Clone ESMF
        run:
          git clone --depth=1 git://esmf.git.sourceforge.net/gitroot/esmf/esmf ${ESMF_DIR}
      - name: Build ESMF
        env:
          ESMF_BOPT: O
          ESMF_COMM: mpiuni
          ESMF_ABI: 64
          ESMF_MOAB: OFF
          ESMF_OPTLEVEL: 2
          ESMF_LAPACK: internal
          ESMF_NETCDF: split
          ESMF_F90COMPILEOPTS: -DESMF_NO_SEQUENCE
          ESMF_COMPILER: gfortran
        run:
          make -C ${ESMF_DIR}
      - name: Install ESMF
        run:
          make -C ${ESMF_DIR} install
  checkout-externals-job:
      name: Checkout externals
      runs-on: ubuntu-latest
      #shell: bash
      env:
        MOSSCO_DIR: ${HOME}/devel/mossco-code
      steps:
#        - name: Setup debug for actions
#          uses: hmarr/debug-action@v1
#        - name: Checkout yourself with action
#          uses: actions/checkout@v1
#          with:
#            fetch-depth: 1
        - name: Checkout yourself manually
          run:
            rm -rf ${MOSSCO_DIR}/* &&
            git clone --depth=1 https://github.com/${GITHUB_REPOSITORY} ${MOSSCO_DIR}
        - name: Test git
          run:
            echo $(which git) ${HOME} ${MOSSCO_DIR}
        - name: Checkout gotm
          if: test -f ${MOSSCO_DIR}
          run: make -C ${MOSSCO_DIR}/external gotm
        - name: Checkout getm
          run: make -C ${MOSSCO_DIR}/external getm
        - name: Checkout fabm
          run: make -C ${MOSSCO_DIR}/external fabm
        - name: Update all
          run: make -C {MOSSCO_DIR} external
# export ESMFMKFILE=/opt/esmf/lib/libg/Darwin.gfortran.64.openmpi.ESMF_7_1_0r/esmf.mk
