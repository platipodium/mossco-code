# SPDX-FileCopyrightText: 2025 Helmholtz-Zentrum hereon GmbH
# SPDX-License-Identifier: CC0-1.0
# SPDX-FileContributor: Carsten Lemmen <carsten.lemmen@hereon.de>

add_library(mossco_drivers STATIC)

set(DRIVER_SOURCES
    #driver.F
    empty_driver.F90
    particle_driver.F90
    simplewave_driver.F90
    #tracer_driver.F90
    #vertical_macrobenthos_driver.F90
)

option(USE_HAMSOM "Enable HAMSOM-based drivers" OFF)
if(USE_HAMSOM)
    list(APPEND DRIVER_SOURCES
        hamsom_driver.F90
    )
endif()

option(USE_CMAQ "Enable CMAQ-based drivers" OFF)
if(USE_CMAQ)
    list(APPEND DRIVER_SOURCES
        cmaq_driver.F90
    )
endif()

option(USE_GETM "Enable GETM-based drivers" OFF)
if(USE_GETM)
    list(APPEND DRIVER_SOURCES
        getm_driver.F90
    )
endif()

option(USE_FABM "Enable FABM-based drivers" OFF)
if(USE_FABM)
    list(APPEND DRIVER_SOURCES
    fabm0d_driver.F90
    fabm_benthic_driver.F90
    fabm_gotm_driver.F90
    fabm_pelagic_driver.F90
    fabm_sediment_driver.F90
    )
endif()

# Option to enable or disable EROSED-related sources
option(USE_EROSED "Enable EROSED-related drivers (biotypes, benthoseffect_class)" OFF)
if(USE_EROSED)
    list(APPEND DRIVER_SOURCES 
        biotypes.F90 
        benthoseffect_class.F90 
        erosed.F90
        macrofauna_class.F90
        macrofauna_interface.F90
        mbalthica_class.F90
        microphytobenthos_class.F90
        benthoseffect_class.F90
        criticalsheareffect.F90
        erodibilityeffect.F90
    )
endif()

# Find and link NetCDF
find_package(NetCDF REQUIRED COMPONENTS Fortran C)

if(NetCDF_FOUND)
    message(STATUS "NetCDF found. Linking with NetCDF::NetCDF_Fortran and NetCDF::NetCDF_C.")
    #target_link_libraries(mossco_utilities PRIVATE NetCDF::NetCDF_Fortran NetCDF::NetCDF_C)
    # Modern NetCDF targets should propagate their include directories.
    # If not, explicitly add:
    target_include_directories(mossco_drivers PRIVATE ${NetCDF_INCLUDE_DIRS})
else()
    message(FATAL_ERROR "NetCDF (Fortran and C) was REQUIRED but not found. Check NetCDF installation and CMAKE_PREFIX_PATH.")
endif()


# Option to enable or disable clm_driver.F90
option(USE_CLM "Enable CLM file-based coupling" OFF)
if(USE_CLM )
    list(APPEND DRIVER_SOURCES 
        clm_driver.F90
        river_driver.F90
    )
endif()

target_sources(mossco_drivers PRIVATE ${DRIVER_SOURCES})

# Link against mossco_utilities to get access to ESMF, versioning, NetCDF (via ESMF), etc.
# Using PUBLIC will propagate the usage requirements of mossco_utilities (like its INTERFACE include directories
# and link libraries) to targets that link against mossco_drivers.
target_link_libraries(mossco_drivers PUBLIC mossco_utilities)

# Ensure that consumers of mossco_drivers can find Fortran modules (.mod files)
# generated by mossco_drivers. These modules are placed in CMAKE_Fortran_MODULE_DIRECTORY.
# Linking mossco_utilities PUBLIC should already make CMAKE_Fortran_MODULE_DIRECTORY
# an interface include directory if mossco_utilities exports it.
# However, explicitly stating it for mossco_drivers ensures clarity and correctness
# if mossco_drivers itself produces modules that are distinct from those in mossco_utilities,
# or if mossco_utilities's propagation isn't fully comprehensive for this specific need.
target_include_directories(mossco_drivers
    PUBLIC # Changed from INTERFACE in prompt to PUBLIC for BUILD_INTERFACE and INSTALL_INTERFACE consistency
        # For consumers finding .mod files from this target
        "$<BUILD_INTERFACE:${CMAKE_Fortran_MODULE_DIRECTORY}>"
        "$<INSTALL_INTERFACE:include>" # Assuming .mod files might be installed to 'include/modules' or similar
                                       # This part needs alignment with actual install rules for modules.
                                       # For now, generic 'include' is a placeholder.
    PRIVATE
        # For mossco_drivers' own source files to find modules they produce (if any interdependencies)
        ${CMAKE_Fortran_MODULE_DIRECTORY}
)

